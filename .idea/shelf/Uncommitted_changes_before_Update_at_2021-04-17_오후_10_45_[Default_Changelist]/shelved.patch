Index: Test/Notice_crawling.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import requests\r\nfrom bs4 import BeautifulSoup\r\narr=[]\r\n\r\nfor i in range(1,5): #i = 공지사항 페이지 우선 5번째 페이지 까지만\r\n    url=requests.get('https://computer.knu.ac.kr/06_sub/02_sub.html?page='+str(i)+'&key=&keyfield=&category=&bbs_code=Site_BBS_25')\r\n\r\n    parsed=BeautifulSoup(url.content,'html.parser')\r\n\r\n    a_title=parsed.findAll('a',attrs={'title':True,'target':False})  #a태그 중 타이틀이 있는것과 target이 없는것\r\n\r\n\r\n    for title in a_title: #조건에 맞는 태그 중 title만을 뽑을 때\r\n        arr.append(title['title'])\r\n\r\n\r\nfor data in arr:  # 공지사항 제목안에 키워드 입력 시 그 데이터만 제공 ==data\r\n    if data.find('지역선도') == True:\r\n        print(data)\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Test/Notice_crawling.py b/Test/Notice_crawling.py
--- a/Test/Notice_crawling.py	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
+++ b/Test/Notice_crawling.py	(date 1618663858372)
@@ -14,7 +14,7 @@
         arr.append(title['title'])
 
 
-for data in arr:  # 공지사항 제목안에 키워드 입력 시 그 데이터만 제공 ==data
+for data in arr:  # 공지사항 키워드 입력 시 그 데이터만 제공 ==data
     if data.find('지역선도') == True:
         print(data)
 
Index: django_test/mytestsite/mytestsite/urls.py
===================================================================
diff --git a/django_test/mytestsite/mytestsite/urls.py b/django_test/mytestsite/mytestsite/urls.py
deleted file mode 100644
--- a/django_test/mytestsite/mytestsite/urls.py	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
+++ /dev/null	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
@@ -1,21 +0,0 @@
-"""mytestsite URL Configuration
-
-The `urlpatterns` list routes URLs to views. For more information please see:
-    https://docs.djangoproject.com/en/3.2/topics/http/urls/
-Examples:
-Function views
-    1. Add an import:  from my_app import views
-    2. Add a URL to urlpatterns:  path('', views.home, name='home')
-Class-based views
-    1. Add an import:  from other_app.views import Home
-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
-Including another URLconf
-    1. Import the include() function: from django.urls import include, path
-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
-"""
-from django.contrib import admin
-from django.urls import path
-
-urlpatterns = [
-    path('admin/', admin.site.urls),
-]
Index: django_test/mytestsite/mytestsite/settings.py
===================================================================
diff --git a/django_test/mytestsite/mytestsite/settings.py b/django_test/mytestsite/mytestsite/settings.py
deleted file mode 100644
--- a/django_test/mytestsite/mytestsite/settings.py	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
+++ /dev/null	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
@@ -1,125 +0,0 @@
-"""
-Django settings for mytestsite project.
-
-Generated by 'django-admin startproject' using Django 3.2.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/3.2/topics/settings/
-
-For the full list of settings and their values, see
-https://docs.djangoproject.com/en/3.2/ref/settings/
-"""
-
-from pathlib import Path
-
-# Build paths inside the project like this: BASE_DIR / 'subdir'.
-BASE_DIR = Path(__file__).resolve().parent.parent
-
-
-# Quick-start development settings - unsuitable for production
-# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
-
-# SECURITY WARNING: keep the secret key used in production secret!
-SECRET_KEY = 'django-insecure-g9_1icvo^8b2#qc0hexpt*3#q^8k600@le8%-ylt^wj5i6s1ue'
-
-# SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = True
-
-ALLOWED_HOSTS = []
-
-
-# Application definition
-
-INSTALLED_APPS = [
-    'django.contrib.admin',
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.sessions',
-    'django.contrib.messages',
-    'django.contrib.staticfiles',
-]
-
-MIDDLEWARE = [
-    'django.middleware.security.SecurityMiddleware',
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'django.middleware.clickjacking.XFrameOptionsMiddleware',
-]
-
-ROOT_URLCONF = 'mytestsite.urls'
-
-TEMPLATES = [
-    {
-        'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [],
-        'APP_DIRS': True,
-        'OPTIONS': {
-            'context_processors': [
-                'django.template.context_processors.debug',
-                'django.template.context_processors.request',
-                'django.contrib.auth.context_processors.auth',
-                'django.contrib.messages.context_processors.messages',
-            ],
-        },
-    },
-]
-
-WSGI_APPLICATION = 'mytestsite.wsgi.application'
-
-
-# Database
-# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': BASE_DIR / 'db.sqlite3',
-    }
-}
-
-
-# Password validation
-# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
-
-AUTH_PASSWORD_VALIDATORS = [
-    {
-        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-    },
-]
-
-
-# Internationalization
-# https://docs.djangoproject.com/en/3.2/topics/i18n/
-
-LANGUAGE_CODE = 'en-us'
-
-TIME_ZONE = 'UTC'
-
-USE_I18N = True
-
-USE_L10N = True
-
-USE_TZ = True
-
-
-# Static files (CSS, JavaScript, Images)
-# https://docs.djangoproject.com/en/3.2/howto/static-files/
-
-STATIC_URL = '/static/'
-
-# Default primary key field type
-# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
-
-DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
Index: django_test/mytestsite/mytestsite/asgi.py
===================================================================
diff --git a/django_test/mytestsite/mytestsite/asgi.py b/django_test/mytestsite/mytestsite/asgi.py
deleted file mode 100644
--- a/django_test/mytestsite/mytestsite/asgi.py	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
+++ /dev/null	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
@@ -1,16 +0,0 @@
-"""
-ASGI config for mytestsite project.
-
-It exposes the ASGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/3.2/howto/deployment/asgi/
-"""
-
-import os
-
-from django.core.asgi import get_asgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mytestsite.settings')
-
-application = get_asgi_application()
Index: django_test/mytestsite/mytestsite/wsgi.py
===================================================================
diff --git a/django_test/mytestsite/mytestsite/wsgi.py b/django_test/mytestsite/mytestsite/wsgi.py
deleted file mode 100644
--- a/django_test/mytestsite/mytestsite/wsgi.py	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
+++ /dev/null	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
@@ -1,16 +0,0 @@
-"""
-WSGI config for mytestsite project.
-
-It exposes the WSGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/3.2/howto/deployment/wsgi/
-"""
-
-import os
-
-from django.core.wsgi import get_wsgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mytestsite.settings')
-
-application = get_wsgi_application()
Index: django_test/mytestsite/manage.py
===================================================================
diff --git a/django_test/mytestsite/manage.py b/django_test/mytestsite/manage.py
deleted file mode 100644
--- a/django_test/mytestsite/manage.py	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
+++ /dev/null	(revision a1bc4080cba83351dc6991f6beae6f6e9258f5ea)
@@ -1,22 +0,0 @@
-#!/usr/bin/env python
-"""Django's command-line utility for administrative tasks."""
-import os
-import sys
-
-
-def main():
-    """Run administrative tasks."""
-    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mytestsite.settings')
-    try:
-        from django.core.management import execute_from_command_line
-    except ImportError as exc:
-        raise ImportError(
-            "Couldn't import Django. Are you sure it's installed and "
-            "available on your PYTHONPATH environment variable? Did you "
-            "forget to activate a virtual environment?"
-        ) from exc
-    execute_from_command_line(sys.argv)
-
-
-if __name__ == '__main__':
-    main()
diff --git a/django_test/mytestsite/mytestsite/__init__.py b/django_test/mytestsite/mytestsite/__init__.py
deleted file mode 100644
diff --git a/Test/Django/Django_practice.py b/Test/Django/Django_practice.py
deleted file mode 100644
